# set directory for files

setwd("C:/Users/clint/Documents/Capstone/bike_project_R/202309-202408_trip_data")

# Load packages to be used

library(tidyverse)
library(conflicted)
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
library(lubridate)
library(scales)

# Uploading files

data_files <- list.files(pattern = "*.csv")
all_data <- map_df(data_files, read_csv)

# Cleaning Data

bike_data <- all_data %>% 
  select("ride_id", "rideable_type", "started_at", "ended_at",
         "start_station_name", "end_station_name", "member_casual") %>% 
  na.omit() %>%
  mutate(
    ride_length = as.numeric(difftime(ended_at, started_at, units = "secs")),
    date = as.Date(started_at),
    weekday = format(date, "%A"),
    month = format(date, "%m"),
    day = format(date, "%d"),
    year = format(date, "%Y"),
  ) %>% 
  distinct(ride_id, .keep_all = TRUE) %>%  # Remove duplicates based on ride_id
  select("ride_id", "rideable_type", "started_at", "ended_at", "start_station_name", 
         "end_station_name", "weekday", "ride_length", "member_casual", "date", 
         "month", "day", "year") %>% 
  filter(ride_length >= 60, ride_length <= (60 * 60 * 24))

# Analyzing Data

# Month Count
month_count = bike_data %>% 
  group_by(months = month.name[month(started_at)], member_casual) %>% 
  summarize(row_count = n()) %>% 
  arrange(match(months,month.name))
write.csv(month_count, "month_count.csv", row.names = FALSE)

# Weekday Count
weekday_count = bike_data %>% 
  group_by(weekday = weekday, member_casual = member_casual) %>% 
  summarize(row_count = n())
write.csv(weekday_count, "output_data/weekday_count.csv", row.names=FALSE)

# Top Start Station
top_start_station <- bike_data %>% 
  group_by(start_station_name, member_casual) %>% 
  summarize(row_count = n()) %>% 
  arrange(desc(row_count))
write.csv(top_start_station, "output_data/top_start_station.csv", row.names = FALSE)

# Top End Station
top_end_station <- bike_data %>% 
  group_by(end_station_name, member_casual) %>% 
  summarize(row_count = n()) %>% 
  arrange(desc(row_count))
write.csv(top_end_station, "output_data/top_end_station.csv", row.names = FALSE)

# Average Ride Length
ride_length <- bike_data %>% 
  group_by(member_casual) %>% 
  summarize(mean(ride_length))
write.csv(ride_length, "output_data/ride_length.csv", row.names = FALSE)

# Rides per Weekday by membership
ridership_weekday <- bike_data %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n(),
            average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday)
write.csv(ridership_weekday, "output_data/ridership_weekday.csv", row.names = FALSE)

# Visualizing Data for number of rides per weekday
bike_data %>%
  mutate(weekday = wday(started_at, label = TRUE)) %>%
  group_by(member_casual, weekday) %>%
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>%
  arrange(member_casual, weekday) %>%
  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge") +
  scale_y_continuous(labels = comma)

# visualization for average duration between memberships
bike_data %>%
  mutate(weekday = wday(started_at, label = TRUE)) %>%
  group_by(member_casual, weekday) %>%
  summarise(number_of_rides = n(),
            average_duration = mean(ride_length)) %>%
  arrange(member_casual, weekday) %>%
  ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +
  geom_col(position = "dodge") +
  scale_y_continuous(labels = comma)
